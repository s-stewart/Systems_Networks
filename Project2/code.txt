0001 0011 1010 0000 1010 0000 0000 0000		13a0a000	0//addi $29, $zero, initsp ! initialize the stack pointer
0001 1011 1010 0000 0000 0000 0000 0000 	1ba00000	4//lw $29, 0($29)
0011 0100 0000 0000 0000 0000 0000 0000		34000000        8//ei
0001 0000 0010 0000 0000 0000 1010 0100		10200064	c//addi R1,R0,100
0001 0000 1000 0000 0000 0000 1	   4 		10800014	10//addi R4,R0,loop=14
0001 1000 0110 0001 0000 0000 0000 0000		18610000	14//lw R3,0(R1)
0001 0000 0010 0001 ffff ffff ffff ffff		1021ffff	18//addi R1,R1,-1
0010 1000 0000 0001 0000 0000 0000 0100		28010004	1c//beq R0,R1,+4
0010 1100 0000 0000 0000 0000 0000 0100		2c000004	20//jalr R0,R4 jump to value in R4(loop)
0010 1000 0000 0000 1111 1111 1111 1100		2800fffc	24//beq r0,r0,-4 HALT


0011 1000 0000 0000 0000 0000 0000 0000  	38000000	30//di
0001 0011 1011 1101 1111 1111 1111 1100		13bdfffc	34//addi $29, $29, -4
0010 0011 1101 1101 0000 0000 0000 0000		23dd0000	38//sw   $30,0($29)
0011 0100 0000 0000 0000 0000 0000 0000		34000000        3c//ei
0001 0011 1011 1101 1111 1111 1111 1100		13bdfffc	40//addi $29, $29, -4
0010 0000 0011 1101 0000 0000 0000 0000		203d0000	44//sw   $1,0($29)
0001 1000 0010 0000 0000 0000 2	   C		1820002C	48//lw $1,2c($0)     !load the interupt count into R1
0001 0000 0010 0001 0000 0000 0000 0001		10210001	4c//addi $1,$1,1     !increment interupt count
0010 0000 0010 0000 0000 0000 2	   C		2020002c	50//sw $1,0x44($0)   !store the increment count back to mem 2C = 44
0001 1000 0011 1101 0000 0000 0000 0000		183d0000	54//lw $1, 0($29)    !restore R1
0011 1000 0000 0000 0000 0000 0000 0000  	38000000	58//DI
0001 0011 1011 1101 0000 0000 0000 0100		13bd0004	5c//addi $29,$29,4   !move stack pointer down
0001 1011 1101 1101 0000 0000 0000 0000		1bdd0000	60//lw $30,0($29)    !restore PC
0011 0100 0000 0000 0000 0000 0000 0000		34000000        64//ei
0001 0011 1011 1101 0000 0000 0000 0100		13bd0004	68//addi $29, $29, 4
0011 1100 0000 0000 0000 0000 0000 0000  	3c000000	6c//RTI